name: CD - Production
on:
  push:
    branches:
      - master
jobs:
  production:
    name: init, import, plan, apply, metadata, slack
    runs-on: ubuntu-latest
    env:
      TF_VERSION: latest
      TF_DIRECTORY: tf/production
      TF_DEPLOYMENT_ID: fastly_service_v1
      TF_RESOURCE_ID: api-service-production-0p7ElaomsexoNHwdMbYJac
      TF_SERVICE_ID: 0p7ElaomsexoNHwdMbYJac
      TF_VAR_FASTLY_PRODUCTION_API_KEY: ${{ secrets.TF_VAR_FASTLY_PRODUCTION_API_KEY }}
      TF_VAR_GCS_LOGGING_NAME: ${{ secrets.TF_VAR_GCS_LOGGING_NAME }}
      TF_VAR_GCS_LOGGING_SECRET_KEY: ${{ secrets.TF_VAR_GCS_LOGGING_SECRET_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@01aecccf739ca6ff86c0539fbc67a7a5007bbc81
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@1acd6aa693246e33c9d49f861878fc5813736d47
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: init
          tf_actions_comment: false
          args: ${{ env.TF_DIRECTORY }}
      - name: Terraform Import
        uses: hashicorp/terraform-github-actions@1acd6aa693246e33c9d49f861878fc5813736d47
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: import
          tf_actions_comment: false
          args: -config=${{ env.TF_DIRECTORY }} -no-color ${{ env.TF_DEPLOYMENT_ID }}.${{ env.TF_RESOURCE_ID }} ${{ env.TF_SERVICE_ID }}
      - name: Update Terraform State
        run: jq '.resources[].instances[].attributes.activate = false' terraform.tfstate > temp && mv temp terraform.tfstate
      - name: Terraform Plan
        id: plan
        uses: hashicorp/terraform-github-actions@1acd6aa693246e33c9d49f861878fc5813736d47
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: plan
          tf_actions_comment: false
          args: -out=production.plan ${{ env.TF_DIRECTORY }}
      - name: Terraform Apply
        uses: hashicorp/terraform-github-actions@1acd6aa693246e33c9d49f861878fc5813736d47
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: apply
          tf_actions_comment: false
          args: production.plan
      - name: Terraform Output
        id: output
        uses: hashicorp/terraform-github-actions@1acd6aa693246e33c9d49f861878fc5813736d47
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: output
          tf_actions_comment: false
      - name: Fastly Service Metadata
        id: metadata
        uses: philippschulte/fastly-terraform-metadata-action@8ed45e4daf8c76e259d301d3adde29b853c7cb78
        with:
          tf_plan_has_changes: ${{ steps.plan.outputs.tf_actions_plan_has_changes }}
          tf_output_json_string: ${{ steps.output.outputs.tf_actions_output }}
      - name: Slack Notification
        if: steps.plan.outputs.tf_actions_plan_has_changes == 'true'
        uses: rtCamp/action-slack-notify@061a1e4ee0c8d960c1069e0fd4fe88c534700cfd
        env:
          SLACK_CHANNEL: toru-test
          SLACK_COLOR: '#5c4ee5'
          SLACK_ICON: https://avatars1.githubusercontent.com/u/28900900?s=70&v=4
          SLACK_MESSAGE: ${{ steps.metadata.outputs.fastly_service_config_url }}
          SLACK_TITLE: ${{ steps.metadata.outputs.fastly_service_version_info }}
          SLACK_USERNAME: Terraform
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
